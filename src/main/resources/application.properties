spring.application.name=kafka
server.port=8080

#kafka配置
spring.kafka.bootstrap-servers=10.112.33.24:9092,10.112.33.67:9092,10.112.33.43:9092

## producer的配置
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.IntegerSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
# 生产者每个批次最多放多少条记录
spring.kafka.producer.batch-size=16384
#生产者端总的可用缓冲区大小，此处设置为32M
spring.kafka.producer.buffer-memory=33554432


## consumer的配置
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#消费者分组
spring.kafka.consumer.group-id=springboot-consumer-1
## 当服务器端没有该消费者的offset的偏移量，下次提交应该如何处理。earliest：从最早的
spring.kafka.consumer.auto-offset-reset=earliest
## 消费者的事务是自动提交还是游动提交，true是自动提交
spring.kafka.consumer.enable-auto-commit=true
##如果设置为自动提交，需要设置消费者偏移量自动提交的时间间隔
spring.kafka.consumer.auto-commit-interval=1000


